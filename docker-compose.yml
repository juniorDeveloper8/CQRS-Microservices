version: "3.9"

services:
  # API Gateway Service
  apigateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - spring-network
    depends_on:
      - eureka
      - cmservice
      - qryservice
      - kafka
      - mysql

  # Eureka Service
  eureka:
    build:
      context: ./Eureka
      dockerfile: Dockerfile
    networks:
      - spring-network
    depends_on:
      - mysql

  # CmService Service
  cmservice:
    build:
      context: ./cmservice
      dockerfile: Dockerfile
    networks:
      - spring-network
    depends_on:
      - mysql
      - kafka

  # QryService Service
  qryservice:
    build:
      context: ./qryservice
      dockerfile: Dockerfile
    networks:
      - spring-network
    depends_on:
      - mysql
      - kafka

  # MySQL Database
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: roberth456
      MYSQL_DATABASE: PayBank
      MYSQL_USER: hack4you
      MYSQL_PASSWORD: 123456
    networks:
      - spring-network
    volumes:
      - mysql-volume:/var/lib/mysql

  # Kafka Service
  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE_KAFKA://kafka:9093,OUTSIDE_KAFKA://localhost:9092
      KAFKA_LISTENERS: INSIDE_KAFKA://0.0.0.0:9093,OUTSIDE_KAFKA://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - spring-network
    depends_on:
      - zookeeper

  # Zookeeper for Kafka
  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - spring-network

networks:
  spring-network:

volumes:
  mysql-volume:
